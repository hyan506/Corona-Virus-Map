{"version":3,"sources":["List/List.module.css","containers/TopBar/TopBar.module.css","Map/Labels/LabelWindow/LabelWindow.module.css","containers/Container/Container.module.css","containers/Layout/Layout.module.css","containers/Side/Side.module.css","LastUpdated/LastUpdated.module.css","Map/Labels/LabelWindow/LabelWindow.js","Map/Labels/Label/Label.js","Map/Labels/Labels.js","Map/Map.js","containers/Container/Container.js","containers/TopBar/TopBar.js","containers/Layout/Layout.js","List/List.js","containers/Side/Side.js","LastUpdated/LastUpdated.js","App.js","serviceWorker.js","index.js","Map/Labels/Label/Label.module.css"],"names":["module","exports","LabelWindow","this","props","longitude","latitude","_context","viewport","project","markerStyle","left","top","ref","_containerRef","className","classes","style","cases","WindowContent","children","BaseControl","Label","data","countryInfo","lat","lng","long","country","line","text","number","deaths","recovered","todayCases","Labels","map","countryData","push","index","Map","useState","width","height","zoom","setViewport","mapStyle","onViewportChange","mapboxApiAccessToken","Container","TopBar","topBar","titleName","myName","Layout","List","list","case","sort","a","b","ListElement","countryRank","countryName","caseNumber","Side","LastUpdated","formattedDate","Date","updated","toLocaleString","App","setData","useEffect","axios","result","console","log","message","fetchData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2e34bed8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__2eiIP\",\"ListElement\":\"List_ListElement__KMJdk\",\"countryRank\":\"List_countryRank__2VvpO\",\"countryName\":\"List_countryName__1nqpB\",\"caseNumber\":\"List_caseNumber__OwYIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"TopBar_topBar__2eN5Y\",\"titleName\":\"TopBar_titleName__1ZE61\",\"myName\":\"TopBar_myName__2P5BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelWindow\":\"LabelWindow_LabelWindow__2iMwT\",\"WindowContent\":\"LabelWindow_WindowContent__lQ-ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__42Yk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2-u2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Side\":\"Side_Side__3MM5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LastUpdated\":\"LastUpdated_LastUpdated__3tfv2\"};","import React from 'react';\r\nimport {BaseControl} from 'react-map-gl';\r\nimport classes from './LabelWindow.module.css'\r\nclass LabelWindow extends BaseControl {\r\n  _render() {\r\n    const {longitude, latitude} = this.props;\r\n\r\n    const [x, y] = this._context.viewport.project([longitude, latitude]);\r\n\r\n    const markerStyle = {\r\n      left: x,\r\n      top: y\r\n    };\r\n\r\n    return (\r\n      <div ref={this._containerRef}\r\n        className={classes.LabelWindow}\r\n        style={markerStyle} >\r\n            {this.props.cases}\r\n        <div className ={classes.WindowContent}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelWindow;","import React from 'react';\r\nimport classes from './Label.module.css';\r\nimport LabelWindow from '../LabelWindow/LabelWindow';\r\n\r\nconst Label = props => {\r\n\r\n    const { lat, long: lng } = props.data.countryInfo;\r\n\r\n  return (\r\n    <div>\r\n        <LabelWindow longitude={lng} latitude={lat} cases={props.data.cases}>\r\n          <h2>{props.data.country}</h2>\r\n          <div className={classes.line}>\r\n            <div className={classes.text}>Confirmed:</div><div className={classes.number}>{props.data.cases}</div>\r\n          </div>\r\n          <div className={classes.line}>\r\n            <div className={classes.text}>Deaths:</div><div className={classes.number}>{props.data.deaths}</div>\r\n          </div>\r\n          <div className={classes.line}>\r\n            <div className={classes.text}>Recovered:</div><div className={classes.number}>{props.data.recovered}</div>\r\n          </div>\r\n          <div className={classes.line}>\r\n            <div className={classes.text}>Confirmed Today:</div><div className={classes.number}>{props.data.todayCases}</div>\r\n          </div>\r\n        </LabelWindow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport Label from './Label/Label';\r\n\r\nconst Labels = (props) => {\r\n  \r\n\r\n  let data = []\r\n  if(typeof props.data !== \"undefined\"){\r\n    props.data.map((countryData) =>{\r\n      data.push(countryData);\r\n      return 1;\r\n    })\r\n\r\n  }\r\n  \r\n\r\n  \r\n  return(\r\n    data.map((countryData, index) => {\r\n        return (\r\n          <Label \r\n            data={countryData}\r\n            />\r\n        );\r\n      })\r\n)\r\n\r\n};\r\n\r\nexport default Labels;","import React, { useState } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport Labels from './Labels/Labels';\r\n\r\nconst Map = (props)=> {\r\n  const [viewport, setViewport] = useState({\r\n    width :\"100%\",\r\n    height :\"100%\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 1.5\r\n  });\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      mapStyle = \"mapbox://styles/blueberrypie/ck8lj4cgn02221ikg4mu2uz3h\"\r\n      \r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={\"pk.eyJ1IjoiYmx1ZWJlcnJ5cGllIiwiYSI6ImNrOGs5Z3hyMjA1ankza29icWZrOHJ6bnAifQ.9JUhm90bB_TCER56V88ntg\"}\r\n    >\r\n      <Labels data = {props.data}/>\r\n\r\n    </ReactMapGL>\r\n  );\r\n}\r\nexport default  Map;","import React from 'react';\r\nimport classes  from './Container.module.css';\r\nconst Container = (props) =>{\r\n    return(\r\n        <div className={classes.Container}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Container;","import React from \"react\";\r\nimport classes from \"./TopBar.module.css\";\r\nconst TopBar = props => {\r\n  return (\r\n      <div className={classes.topBar}>\r\n        <h1 className={classes.titleName}>Coronavirus COVID-19 Global Cases</h1>\r\n        <p className={classes.myName}>By Steven Yan</p>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport classes  from './Layout.module.css';\r\nconst Layout = (props) =>{\r\n    return(\r\n        <div className={classes.Layout}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes  from './List.module.css';\r\nconst List = (props) =>{\r\n\r\n    let list = []\r\n    if(typeof props.data !== \"undefined\"){\r\n      props.data.map((countryData) =>{\r\n        list.push({\r\n          country: countryData.country,\r\n          case: countryData.cases});\r\n        return 1;\r\n      })\r\n  \r\n    }\r\n    list.sort((a, b) => b.case - a.case);\r\n\r\n    return(\r\n        <div className={classes.List}>\r\n              {\r\n                   list.map((country, index) => {\r\n                    return (\r\n                    <div className ={classes.ListElement}>\r\n                      <div classes={classes.countryRank}>{index+1}</div>\r\n                      <div className={classes.countryName}>{country.country}</div>\r\n                      <div className={classes.caseNumber}>{country.case}</div> </div>\r\n                    );\r\n                  })   \r\n              }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport classes  from './Side.module.css';\r\nconst Side = (props) =>{\r\n    return(\r\n        <div className={classes.Side}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Side;","import React from 'react';\r\nimport classes  from './LastUpdated.module.css';\r\nconst LastUpdated = (props) =>{\r\n    let formattedDate;\r\n    if(typeof props.data !== \"undefined\"){\r\n      formattedDate= new Date(props.data[0].updated).toLocaleString();\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.LastUpdated}>\r\n            <h2>Last Updated: {formattedDate}</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LastUpdated;","import React, {useState, useEffect}from 'react';\r\nimport './App.css';\r\nimport '../node_modules/mapbox-gl/dist/mapbox-gl.css';\r\nimport Map from './Map/Map';\r\nimport Container from './containers/Container/Container';\r\nimport axios from 'axios';\r\nimport TopBar from './containers/TopBar/TopBar';\r\nimport Layout from './containers/Layout/Layout';\r\nimport List from './List/List'\r\nimport Side from './containers/Side/Side'\r\nimport LastUpdated from './LastUpdated/LastUpdated'\r\nfunction App() {\r\n\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let result;\r\n      try{\r\n        result = await axios(\r\n          'https://corona.lmao.ninja/v2/countries',\r\n        );\r\n        setData(result.data);\r\n      }catch(e){\r\n        console.log(`Failed to fetch countries: ${e.message}`, e);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n      <Layout>\r\n        <TopBar/>\r\n        <Container>\r\n          <Side>\r\n            <List data={data}></List>\r\n            <LastUpdated data={data}></LastUpdated>\r\n          </Side>\r\n          \r\n          <Map data ={data}/>\r\n        </Container>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Label_text__1FDLH\",\"number\":\"Label_number__3OptQ\",\"line\":\"Label_line__gNfix\"};"],"sourceRoot":""}